
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'groovy'
}

group = 'co'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ssr
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //validate
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // async io
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // hibernate
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate6'

    // spock
    implementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M1-groovy-4.0'

    // db
    // mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.testcontainers:mariadb:1.18.0'

    // h2  -> 운영 디비에서는 삭제
    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok:1.18.30' //테스트 환경에서 주입
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'	//테스트환경의 어노테이션 주입

    // 추후 삭제 예정
    // dev tools only
    compileOnly "org.springframework.boot:spring-boot-devtools"

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //secure
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //secure - jdbc session
    implementation 'org.springframework.session:spring-session-jdbc'

    // spring retry
    implementation 'org.springframework.retry:spring-retry:2.0.3'

    // spring aop
    implementation 'spring-boot-starter-aop:spring-aspects:6.0.11'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.security:spring-security-test'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // mockWebServer
    testImplementation('com.squareup.okhttp3:okhttp:4.10.0')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')

}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootJar") {
    archiveFileName = 'app.jar'
}
